apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "datadog.fullname" . }}
  labels:
    app: {{ template "datadog.name" . }}
    chart: {{ template "datadog.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dd-agent
        chart: {{ template "datadog.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        log/format: "multiline"
        log/multiline_pattern: '^\d{4}-\d{2}-\d{2}'
        log/multiline_negate: 'true'
      name: dd-agent
    spec:
      serviceAccountName: {{ template "datadog.fullname" . }}
      containers:
      - image: {{ .Values.image }}
        imagePullPolicy: Always
        name: dd-agent
        ports:
          - containerPort: 8125
            name: dogstatsdport
            protocol: UDP
        env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret_ref }}
                key: api-key
          - name: KUBERNETES
            value: "yes"
          - name: SD_BACKEND
            value: {{ .Values.sd_backend }}
          - name: KUBERNETES_NAMESPACE_NAME_REGEX
            value: "{{ .Values.namespace_regexp }}"
          - name: TAGS
            value: "{{ .Values.tags }}"
          - name: LOG_LEVEL
            value: INFO
          - name: DD_LOGS_STDOUT
            value: "yes"

        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
